@page "/counter/{initialCount:int?}"
@page "/counter2"
@rendermode InteractiveServer

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current Count: @currentCount <br /> You have clicked the button @currentCount times.</p>

<button class="btn btn-dark" @onclick="IncrementCount">Click me</button>
<br />
<br />
<MyButton OnClick="IncrementCount" class="btn btn-danger">MyButton</MyButton>

<br />
<p>Initial Count=@InitialCount</p>

<div class="mt-3">
    <input @oninput="OnInput"/>
    <button @onclick="OnClick" class="btn btn-success">Clear</button>
    <p>@text</p>
</div>

<div class="mt-3">
    @* <input value="@text" @onchange="OnChange" /> *@
    
</div>

<div style="font-weight:800; background-color:bisque" @onmouseover="MouseOver" @onmouseout="MouseOut">@divText</div>


@code {
    private int currentCount = 0;
    string text = "";
    string divText = "Mouse out";

    protected override void OnInitialized()
    {
        // base.OnInitialized();
        currentCount = InitialCount;
    }

    [Parameter]
    public int InitialCount { get; set; }

    // async Task IncrementCountAsync()
    // {
    //     await Task.Delay(1000);
    //     currentCount++;
    // }
    private void IncrementCount(MouseEventArgs e) => currentCount++;

    private void OnInput(ChangeEventArgs e) => text = (string)e.Value!;

    private void MouseOver(MouseEventArgs e) => divText = "Mouse over";

    private void MouseOut(MouseEventArgs e) => divText = "Mouse out";

    private void OnChange(ChangeEventArgs e) => text = (string)e.Value!;

    private void OnClick(MouseEventArgs e) => text = "";
}
